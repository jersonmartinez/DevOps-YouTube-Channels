name: Validate Links

on:
  schedule:
    - cron: '0 12 * * *'  # Run daily at noon UTC
  pull_request:           # Run on PRs
  workflow_dispatch:      # Allow manual trigger

permissions:
  contents: read
  issues: write

env:
  YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
  LINKEDIN_TOKEN: ${{ secrets.LINKEDIN_TOKEN }}

jobs:
  validate-links:
    runs-on: ubuntu-latest
    environment: link-validation
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv google-api-python-client
          
      - name: Validate links
        run: python .github/scripts/validate_links.py
        
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const invalidLinks = JSON.parse(fs.readFileSync('invalid_links.json', 'utf8'));
            
            const issueBody = `## Invalid Links Found\n\n${
              Object.entries(invalidLinks)
                .map(([file, links]) => (
                  `### ${file}\n${
                    links.map(link => `- ${link}`).join('\n')
                  }`
                )).join('\n\n')
            }`;
            
            await github.rest.issues.create({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              title: '🔍 Invalid Links Found in Repository',
              body: issueBody,
              labels: ['invalid-links', 'needs-attention']
            });
